{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oded\\\\Desktop\\\\Game\\\\pong\\\\src\\\\single.js\";\nimport React\n/*,  { createElement } */\nfrom 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Game from '../src/game/Game';\nimport { error_messages } from './Error_messages/Error_Messages';\nimport Counter from './game/Counter';\nconst SINGLE = 1;\n\nfunction Pager() {\n  const [gameOn, setGameOn] = useState(false);\n  const [p1Name, setp1Name] = useState(\"Player 1\");\n  const [p1Count, setP1Count] = useState(0);\n  const [p2Count, setP2Count] = useState(0);\n  const canvas = useRef(null);\n  const getPointsFromGame = useCallback((points, player) => {\n    if (player === 'Left') {\n      setP1Count(points);\n    }\n\n    if (player === 'Right') {\n      setP2Count(points);\n    }\n  }, []);\n\n  const onSubmit = data => {\n    console.log(data); // startGame();\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Single Player\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"First Name:\", /*#__PURE__*/React.createElement(FormItemInput, {\n    name: \"first_name\",\n    placeholder: \"First name\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    error_styled: errors.first_name,\n    onChange: handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMsg, {\n    show: errors.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, get_error_msg(errors, error_messages, \"first_name\")), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Last Name:\", /*#__PURE__*/React.createElement(FormItemInput, {\n    name: \"last_name\",\n    placeholder: \"Last name\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    error_styled: errors.first_name,\n    onChange: handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMsg, {\n    show: errors.last_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, get_error_msg(errors, error_messages, \"last_name\")), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"User speed:\", /*#__PURE__*/React.createElement(FormItemInput, {\n    name: \"minSpeed\",\n    placeholder: \"Positive numbers only\",\n    ref: register({\n      required: true,\n      min: 1\n    }),\n    error_styled: errors.minSpeed,\n    onChange: handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMsg, {\n    show: errors.minSpeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, get_error_msg(errors, error_messages, \"minSpeed\")), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"PC speed:\", /*#__PURE__*/React.createElement(FormItemInput, {\n    name: \"minSpeed\",\n    placeholder: \"Positive numbers only\",\n    ref: register({\n      required: true,\n      min: 1\n    }),\n    error_styled: errors.minSpeed,\n    onChange: handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMsg, {\n    show: errors.minSpeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, get_error_msg(errors, error_messages, \"minSpeed\"))), /*#__PURE__*/React.createElement(PlyButton, {\n    type: \"submit\"\n    /* onClick={() => startGame()} */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Play!\"), /*#__PURE__*/React.createElement(StyledLink, {\n    to: \"/play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }, \"Back\"));\n}\n\nfunction GameArea() {\n  setTimeout(() => new Game().start(), 1500);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Canvas, {\n    id: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction Single() {\n  if (gameOn) {\n    return GameArea();\n  } else {\n    return Pager();\n  }\n}\n\nexport default Single;\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`;\nconst Title = styled.h1`\n  font-size: calc(5px + 2vmin);\n`;\nconst Form = styled.form`\n  display: flex;\n  // border: 2px solid pink;\n  flex-direction: column;\n  justify-content: center;\n  // text-align: center;\n  align-items: stretch;\n  padding:50px;\n  font-size: calc(5px + 2vmin);\n  direction: ltr;\n`;\nconst StyledLink = styled(Link)`\n  color: mintcream;\n  text-decoration: none;\n`;\nconst Label = styled.label`\npadding: 20px;\n`;\nconst FormItemInput = styled.input`\n  border: none;\n  padding: 3px;\n  color: mintcream;\n  background-color: #282c34;\n  font-size: calc(5px + 2vmin);\n  font-family: 'Press Start 2P', cursive;\n  border-bottom: solid 3px mintcream;\n`;\nconst PlyButton = styled.button`\n  color: mintcream;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  padding:50px;\n  font-size: calc(10px + 2vmin);\n  background-color: #282c34;\n  font-family: 'Press Start 2P', cursive;\n  border: none;\n  &:hover {\n    font-size: calc(20px + 2vmin);;\n  }\n`;\nconst Canvas = styled.canvas`\n    position: absolute;\n    border:solid deepPink 3px;\n    top: 20%;\n    left: 15%;\n`;\nconst ErrorMsg = styled(Label)`\n  color: red;\n`;","map":{"version":3,"sources":["C:/Users/Oded/Desktop/Game/pong/src/single.js"],"names":["React","Link","styled","Game","error_messages","Counter","SINGLE","Pager","gameOn","setGameOn","useState","p1Name","setp1Name","p1Count","setP1Count","p2Count","setP2Count","canvas","useRef","getPointsFromGame","useCallback","points","player","onSubmit","data","console","log","handleSubmit","register","required","minLength","errors","first_name","get_error_msg","last_name","min","minSpeed","GameArea","setTimeout","start","Single","Page","div","Title","h1","Form","form","StyledLink","Label","label","FormItemInput","input","PlyButton","button","Canvas","ErrorMsg"],"mappings":"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","sourcesContent":["import React/*,  { createElement } */ from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Game from '../src/game/Game';\r\nimport { error_messages } from './Error_messages/Error_Messages';\r\nimport Counter from './game/Counter';\r\n\r\nconst SINGLE = 1;\r\n\r\nfunction Pager() {\r\n  const [gameOn, setGameOn] = useState(false);\r\n  const [p1Name, setp1Name] = useState(\"Player 1\");\r\n\r\n  const [p1Count, setP1Count] = useState(0);\r\n  const [p2Count, setP2Count] = useState(0);\r\n  \r\n  const canvas = useRef(null);\r\n  \r\n  const getPointsFromGame = useCallback((points, player) => {\r\n    if (player === 'Left') {\r\n      setP1Count(points);\r\n    }\r\n    if (player === 'Right') {\r\n      setP2Count(points);\r\n    }\r\n  },[])\r\n\r\n\r\n  const onSubmit = data => {\r\n    console.log(data);\r\n    // startGame();\r\n  };\r\n  \r\n  return (\r\n    <Page>\r\n        <Title>Single Player</Title>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Label>First Name:<FormItemInput \r\n                                name=\"first_name\"\r\n                                placeholder=\"First name\"\r\n                                ref={register({ required: true, minLength: 2 })}\r\n                                error_styled={errors.first_name}\r\n                                onChange={handleSubmit()}/>\r\n            </Label>\r\n            <ErrorMsg show={errors.first_name}>\r\n              {get_error_msg(errors, error_messages, \"first_name\")}\r\n            </ErrorMsg>\r\n            <Label>Last Name:<FormItemInput\r\n                                name=\"last_name\" \r\n                                placeholder=\"Last name\"\r\n                                ref={register({ required: true, minLength: 2 })}\r\n                                error_styled={errors.first_name}\r\n                                onChange={handleSubmit()}/>\r\n            </Label>\r\n            <ErrorMsg show={errors.last_name}>\r\n              {get_error_msg(errors, error_messages, \"last_name\")}\r\n            </ErrorMsg>\r\n            <Label>User speed:<FormItemInput \r\n                                name=\"minSpeed\" \r\n                                placeholder=\"Positive numbers only\"\r\n                                ref={register({ required: true, min: 1 })}\r\n                                error_styled={errors.minSpeed}\r\n                                onChange={handleSubmit()}/>\r\n            </Label>\r\n            <ErrorMsg show={errors.minSpeed}>\r\n              {get_error_msg(errors, error_messages, \"minSpeed\")}\r\n            </ErrorMsg>\r\n            <Label>PC speed:<FormItemInput \r\n                                name=\"minSpeed\" \r\n                                placeholder=\"Positive numbers only\"\r\n                                ref={register({ required: true, min: 1 })}\r\n                                error_styled={errors.minSpeed}\r\n                                onChange={handleSubmit()}/>\r\n            </Label>\r\n            <ErrorMsg show={errors.minSpeed}>\r\n              {get_error_msg(errors, error_messages, \"minSpeed\")}\r\n            </ErrorMsg>\r\n        </Form>\r\n        <PlyButton  type=\"submit\"/* onClick={() => startGame()} */>Play!</PlyButton>\r\n         <StyledLink to=\"/play\">Back</StyledLink>\r\n    </Page>\r\n);\r\n}\r\n\r\nfunction  GameArea() {\r\n  setTimeout(() => new Game().start(), 1500);\r\n  return(\r\n    <div>\r\n    <Canvas  id=\"canvas\"/>\r\n    {/* <Counter/>\r\n    <Counter/> */}\r\n    </div>\r\n    );\r\n  \r\n}\r\n  \r\nfunction Single() {\r\n  if (gameOn){\r\n    return(\r\n      GameArea()\r\n    );\r\n  }else{\r\n    return(\r\n      Pager()\r\n    );\r\n  }\r\n}\r\nexport default Single;\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: calc(5px + 2vmin);\r\n`\r\nconst Form = styled.form`\r\n  display: flex;\r\n  // border: 2px solid pink;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  // text-align: center;\r\n  align-items: stretch;\r\n  padding:50px;\r\n  font-size: calc(5px + 2vmin);\r\n  direction: ltr;\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  color: mintcream;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Label =styled.label`\r\npadding: 20px;\r\n`\r\nconst FormItemInput = styled.input`\r\n  border: none;\r\n  padding: 3px;\r\n  color: mintcream;\r\n  background-color: #282c34;\r\n  font-size: calc(5px + 2vmin);\r\n  font-family: 'Press Start 2P', cursive;\r\n  border-bottom: solid 3px mintcream;\r\n`;\r\n\r\nconst PlyButton = styled.button`\r\n  color: mintcream;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  padding:50px;\r\n  font-size: calc(10px + 2vmin);\r\n  background-color: #282c34;\r\n  font-family: 'Press Start 2P', cursive;\r\n  border: none;\r\n  &:hover {\r\n    font-size: calc(20px + 2vmin);;\r\n  }\r\n`;\r\nconst Canvas = styled.canvas`\r\n    position: absolute;\r\n    border:solid deepPink 3px;\r\n    top: 20%;\r\n    left: 15%;\r\n`;\r\nconst ErrorMsg  =styled(Label)`\r\n  color: red;\r\n`"]},"metadata":{},"sourceType":"module"}