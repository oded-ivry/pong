{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oded\\\\Desktop\\\\Game\\\\pong\\\\src\\\\multi.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Game from '../src/game/Game';\nimport Counter from './game/Counter';\nimport { useState, useCallback } from 'react';\nconst MULTI = 2;\n\nfunction Multi() {\n  const [gameOn, setGameOn] = useState(false);\n  const [game, setGame] = useState(null);\n  const [p1Name, setp1Name] = useState(\"Player 1\");\n  const [p2Name, setp2Name] = useState(\"Player 2\");\n  const [p1Count, setP1Count] = useState(0);\n  const [p2Count, setP2Count] = useState(0);\n  const canvas = useRef(null);\n  const getPointsFromGame = useCallback((points, player) => {\n    if (player === 'Left') {\n      setP1Count(points);\n    }\n\n    if (player === 'Right') {\n      setP2Count(points);\n    }\n  }, []);\n  const isGameOver = useCallback(player => {\n    if (player === 'Left') {\n      setGameOn(false);\n      console.log('multi left');\n    }\n\n    if (player === 'Right') {\n      setGameOn(false);\n      console.log('multi right');\n    }\n\n    console.log('isGameOver');\n  }, []);\n  useEffect(() => {\n    if (gameOn === true) {\n      let thisGame = game;\n\n      if (!thisGame) {\n        thisGame = new Game(canvas.current, getPointsFromGame, isGameOver, MULTI);\n      }\n\n      thisGame.start();\n      setGame(thisGame);\n    } else if (game) {\n      game.stop();\n    }\n\n    return () => {\n      console.log('umounting');\n\n      if (game) {\n        game.stop();\n      }\n    }; //why do I need getPointsFromGame in this array?\n  }, [gameOn, getPointsFromGame, isGameOver, game]);\n\n  const onSubmit = props => {\n    setGameOn(true);\n  };\n\n  if (gameOn) {\n    return /*#__PURE__*/React.createElement(GamePage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LeftCounter, {\n      name: p1Name,\n      count: p1Count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(RightCounter, {\n      name: p2Name,\n      count: p2Count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Canvas, {\n      ref: canvas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Multi Player\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"1st player's name:\", /*#__PURE__*/React.createElement(FormItemInput, {\n      name: \"p1Name\",\n      type: \"text\",\n      onChange: event => setp1Name(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 40\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"2nd player's name:\", /*#__PURE__*/React.createElement(FormItemInput, {\n      name: \"p2Name\",\n      type: \"text\",\n      onChange: event => setp2Name(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 40\n      }\n    })), /*#__PURE__*/React.createElement(PlyButton, {\n      onClick: props => onSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Play!\")), /*#__PURE__*/React.createElement(StyledLink, {\n      to: \"/play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Back\"));\n  }\n}\n\nexport default Multi;\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`;\nconst Title = styled.h1`\n  font-size: calc(5px + 2vmin);\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  padding:50px;\n  font-size: calc(5px + 2vmin);\n  direction: ltr;\n`;\nconst StyledLink = styled(Link)`\n  color: mintcream;\n  text-decoration: none;\n`;\nconst Label = styled.label`\npadding: 20px;\n`;\nconst FormItemInput = styled.input`\n  border: none;\n  padding: 3px;\n  color: white;\n  background-color: #282c34;\n  font-size: calc(5px + 2vmin);\n  font-family: 'Press Start 2P', cursive;\n  border-bottom: solid 3px white;\n`;\nconst PlyButton = styled.button`\n  color: mintcream;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  padding:50px;\n  font-size: calc(10px + 2vmin);\n  background-color: #282c34;\n  font-family: 'Press Start 2P', cursive;\n  border: none;\n  &:hover {\n    font-size: calc(20px + 2vmin);;\n  }\n`;\nconst Canvas = styled.canvas`\n    position: absolute;\n    border:solid deepPink 3px;\n    top: 20%;\n    left: 15%;\n`;\nconst GamePage = styled.div`\n  // border:solid deepPink 3px;\n  // display: flex;\n  flex-direction: row;\n  align-content: flex-end;\n`;\nconst LeftCounter = styled(Counter)`\n\n`;\nconst RightCounter = styled(Counter)`\n\n`;","map":{"version":3,"sources":["C:/Users/Oded/Desktop/Game/pong/src/multi.js"],"names":["React","useRef","useEffect","Link","styled","Game","Counter","useState","useCallback","MULTI","Multi","gameOn","setGameOn","game","setGame","p1Name","setp1Name","p2Name","setp2Name","p1Count","setP1Count","p2Count","setP2Count","canvas","getPointsFromGame","points","player","isGameOver","console","log","thisGame","current","start","stop","onSubmit","props","event","target","value","Page","div","Title","h1","Form","form","StyledLink","Label","label","FormItemInput","input","PlyButton","button","Canvas","GamePage","LeftCounter","RightCounter"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Game from '../src/game/Game';\r\nimport Counter from './game/Counter';\r\nimport { useState, useCallback } from 'react';\r\n\r\nconst MULTI = 2;\r\n\r\nfunction Multi() {\r\n  const [gameOn, setGameOn] = useState(false);\r\n  const [game, setGame] = useState(null);\r\n\r\n  const [p1Name, setp1Name] = useState(\"Player 1\");\r\n  const [p2Name, setp2Name] = useState(\"Player 2\");\r\n  \r\n  const [p1Count, setP1Count] = useState(0);\r\n  const [p2Count, setP2Count] = useState(0);\r\n\r\n  const canvas = useRef(null);\r\n  \r\n  const getPointsFromGame = useCallback((points, player) => {\r\n    if (player === 'Left') {\r\n      setP1Count(points);\r\n    }\r\n    if (player === 'Right') {\r\n      setP2Count(points);\r\n    }\r\n  },[])\r\n  \r\n  const isGameOver = useCallback(player => {\r\n    if (player === 'Left') {\r\n      setGameOn(false);\r\n      console.log('multi left');\r\n    }\r\n    if (player === 'Right') {\r\n      setGameOn(false);\r\n      console.log('multi right');\r\n    }\r\n      console.log('isGameOver');\r\n  },[]);\r\n\r\n  useEffect( () => { \r\n    if(gameOn === true){\r\n      let thisGame = game;\r\n      if (!thisGame){\r\n         thisGame = new Game(canvas.current, getPointsFromGame, isGameOver, MULTI)\r\n      }\r\n      thisGame.start();\r\n      setGame(thisGame);\r\n    }else if (game) {\r\n      game.stop();\r\n    }\r\n    return () => {\r\n      console.log('umounting');\r\n      if (game) {game.stop()}\r\n    }\r\n      //why do I need getPointsFromGame in this array?\r\n  },[gameOn, getPointsFromGame, isGameOver,game])\r\n  \r\n  const onSubmit = props => {\r\n    setGameOn(true);\r\n  };\r\n\r\n  if (gameOn){\r\n    return (\r\n      <GamePage>\r\n        <LeftCounter name={p1Name} count={p1Count}/>\r\n        <RightCounter name={p2Name} count={p2Count}/>\r\n        <Canvas  ref={canvas}/>\r\n      </GamePage>\r\n    );\r\n  }else{\r\n    return (\r\n      <Page>\r\n          <Title>Multi Player</Title>\r\n          <Form>\r\n              <Label>1st player's name:<FormItemInput name=\"p1Name\" type='text'\r\n                                        onChange={event => setp1Name(event.target.value)}/></Label>\r\n              <Label>2nd player's name:<FormItemInput name=\"p2Name\" type='text'\r\n                                        onChange={event => setp2Name(event.target.value)}/></Label>\r\n              <PlyButton onClick={(props) => onSubmit()}>Play!</PlyButton>\r\n          </Form>\r\n          <StyledLink to=\"/play\">Back</StyledLink>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\nexport default Multi;\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: calc(5px + 2vmin);\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  padding:50px;\r\n  font-size: calc(5px + 2vmin);\r\n  direction: ltr;\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  color: mintcream;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Label =styled.label`\r\npadding: 20px;\r\n`;\r\nconst FormItemInput = styled.input`\r\n  border: none;\r\n  padding: 3px;\r\n  color: white;\r\n  background-color: #282c34;\r\n  font-size: calc(5px + 2vmin);\r\n  font-family: 'Press Start 2P', cursive;\r\n  border-bottom: solid 3px white;\r\n`;\r\n\r\nconst PlyButton = styled.button`\r\n  color: mintcream;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  padding:50px;\r\n  font-size: calc(10px + 2vmin);\r\n  background-color: #282c34;\r\n  font-family: 'Press Start 2P', cursive;\r\n  border: none;\r\n  &:hover {\r\n    font-size: calc(20px + 2vmin);;\r\n  }\r\n`;\r\n\r\nconst Canvas = styled.canvas`\r\n    position: absolute;\r\n    border:solid deepPink 3px;\r\n    top: 20%;\r\n    left: 15%;\r\n`;\r\nconst GamePage = styled.div`\r\n  // border:solid deepPink 3px;\r\n  // display: flex;\r\n  flex-direction: row;\r\n  align-content: flex-end;\r\n`;\r\nconst LeftCounter =styled(Counter)`\r\n\r\n`;\r\nconst RightCounter =styled(Counter)`\r\n\r\n`;"]},"metadata":{},"sourceType":"module"}