{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oded\\\\Desktop\\\\Game\\\\pong\\\\src\\\\single.js\";\nimport React, { createElement } from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Game from '../src/game/Game';\nimport { useForm } from \"react-hook-form\"; // import Counter from './game/Counter';\n\nconst error_messages = {\n  first_name: {\n    required: \"First name is required\",\n    minLength: \"First name is too short\"\n  },\n  last_name: {\n    required: \"Last name is required\",\n    minLength: \"Last name is too short\"\n  },\n  speed: {\n    required: \"speed address is required\",\n    minSpeed: \"Please insert positive numbers only\"\n  }\n};\nvar gameOn = false;\n\nfunction startGame() {\n  gameOn = true;\n}\n\nfunction Pager() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const get_error_msg = (errors, error_messages, field_name) => {\n    const generate = name => {\n      if (errors[name]) {\n        switch (errors[name].type) {\n          case \"required\":\n            return error_messages[name].required;\n\n          case \"minLength\":\n            return error_messages[name].minLength;\n\n          case \"pattern\":\n            return error_messages[name].pattern;\n\n          default:\n            return \"\";\n        }\n      }\n    };\n  };\n\n  const onSubmit = data => {\n    // // console.log(data);\n    // data.id = all_robots.length + 1;\n    // data.avatar = `https://robohash.org/${shortid.generate()}`;\n    // dispatch(create_bot(data));\n    // history.push(\"/browse\");\n    startGame();\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Single Player\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"First Name:\", /*#__PURE__*/React.createElement(FormItemInput, {\n    placeholder: \"First Name\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    error_styled: errors.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMsg, {\n    show: errors.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Last Name:\", /*#__PURE__*/React.createElement(FormItemInput, {\n    placeholder: \"Last Name:\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    error_styled: errors.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMsg, {\n    show: errors.last_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"User speed:\", /*#__PURE__*/React.createElement(FormItemInput, {\n    type: \"number\",\n    min: \"1\",\n    max: \"10\",\n    name: \"minSpeed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMsg, {\n    show: errors.minSpeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"PC speed:\", /*#__PURE__*/React.createElement(FormItemInput, {\n    type: \"number\",\n    min: \"1\",\n    max: \"10\",\n    name: \"minSpeed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ErrorMsg, {\n    show: errors.minSpeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(PlyButton, {\n    onClick: () => startGame(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Play!\"), /*#__PURE__*/React.createElement(StyledLink, {\n    to: \"/play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }, \"Back\"));\n}\n\nfunction GameArea() {\n  setTimeout(() => new Game().start(), 1500);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Canvas, {\n    id: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction Single() {\n  if (gameOn) {\n    return GameArea();\n  } else {\n    return Pager();\n  }\n}\n\nexport default Single;\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`;\nconst Title = styled.h1`\n  font-size: calc(5px + 2vmin);\n`;\nconst Form = styled.form`\n  display: flex;\n  // border: 2px solid pink;\n  flex-direction: column;\n  justify-content: center;\n  // text-align: center;\n  align-items: stretch;\n  padding:50px;\n  font-size: calc(5px + 2vmin);\n  direction: ltr;\n`;\nconst StyledLink = styled(Link)`\n  color: mintcream;\n  text-decoration: none;\n`;\nconst Label = styled.label`\npadding: 20px;\n`;\nconst FormItemInput = styled.input`\n  border: none;\n  padding: 3px;\n  color: mintcream;\n  background-color: #282c34;\n  font-size: calc(5px + 2vmin);\n  font-family: 'Press Start 2P', cursive;\n  border-bottom: solid 3px mintcream;\n`;\nconst PlyButton = styled.button`\n  color: mintcream;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  padding:50px;\n  font-size: calc(10px + 2vmin);\n  background-color: #282c34;\n  font-family: 'Press Start 2P', cursive;\n  border: none;\n  &:hover {\n    font-size: calc(20px + 2vmin);;\n  }\n`;\nconst Canvas = styled.canvas`\n    position: absolute;\n    border:solid deepPink 3px;\n    top: 20%;\n    left: 15%;\n`;\nconst ErrorMsg = styled(Label)`\n  color: red;\n`;","map":{"version":3,"sources":["C:/Users/Oded/Desktop/Game/pong/src/single.js"],"names":["React","createElement","Link","styled","Game","useForm","error_messages","first_name","required","minLength","last_name","speed","minSpeed","gameOn","startGame","Pager","register","handleSubmit","errors","get_error_msg","field_name","generate","name","type","pattern","onSubmit","data","GameArea","setTimeout","start","Single","Page","div","Title","h1","Form","form","StyledLink","Label","label","FormItemInput","input","PlyButton","button","Canvas","canvas","ErrorMsg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CACA;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,wBADA;AAEVC,IAAAA,SAAS,EAAE;AAFD,GADS;AAKrBC,EAAAA,SAAS,EAAE;AACTF,IAAAA,QAAQ,EAAE,uBADD;AAETC,IAAAA,SAAS,EAAE;AAFF,GALU;AASrBE,EAAAA,KAAK,EAAE;AACLH,IAAAA,QAAQ,EAAE,2BADL;AAELI,IAAAA,QAAQ,EAAE;AAFL;AATc,CAAvB;AAeA,IAAIC,MAAM,GAAG,KAAb;;AAEA,SAASC,SAAT,GAAoB;AACnBD,EAAAA,MAAM,GAAG,IAAT;AACA;;AAED,SAASE,KAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCb,OAAO,EAAlD;;AAEA,QAAMc,aAAa,GAAG,CAACD,MAAD,EAASZ,cAAT,EAAyBc,UAAzB,KAAwC;AAC5D,UAAMC,QAAQ,GAAGC,IAAI,IAAI;AACvB,UAAIJ,MAAM,CAACI,IAAD,CAAV,EAAkB;AAChB,gBAAQJ,MAAM,CAACI,IAAD,CAAN,CAAaC,IAArB;AACE,eAAK,UAAL;AACE,mBAAOjB,cAAc,CAACgB,IAAD,CAAd,CAAqBd,QAA5B;;AACF,eAAK,WAAL;AACE,mBAAOF,cAAc,CAACgB,IAAD,CAAd,CAAqBb,SAA5B;;AACF,eAAK,SAAL;AACE,mBAAOH,cAAc,CAACgB,IAAD,CAAd,CAAqBE,OAA5B;;AACF;AACE,mBAAO,EAAP;AARJ;AAUD;AACF,KAbD;AAcD,GAfD;;AAiBA,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACvB;AACA;AACA;AACA;AACA;AACAZ,IAAAA,SAAS;AACV,GAPD;;AASA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEG,YAAY,CAACQ,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAkB,oBAAC,aAAD;AACE,IAAA,WAAW,EAAC,YADd;AAEE,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAER,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAD,CAFf;AAGE,IAAA,YAAY,EAAES,MAAM,CAACX,UAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CADJ,eAMI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEW,MAAM,CAACX,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAiB,oBAAC,aAAD;AACG,IAAA,WAAW,EAAC,YADf;AAEG,IAAA,GAAG,EAAES,QAAQ,CAAC;AAAER,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAD,CAFhB;AAGG,IAAA,YAAY,EAAES,MAAM,CAACX,UAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,CAPJ,eAYI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEW,MAAM,CAACR,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,eAaI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAkB,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,GAAG,EAAC,GAAjC;AAAqC,IAAA,GAAG,EAAC,IAAzC;AAA8C,IAAA,IAAI,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAbJ,eAcI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEQ,MAAM,CAACN,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAeI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAgB,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,GAAG,EAAC,GAAjC;AAAqC,IAAA,GAAG,EAAC,IAAzC;AAA8C,IAAA,IAAI,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAfJ,eAgBI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEM,MAAM,CAACN,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CAFJ,eAoBI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE,MAAME,SAAS,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aApBJ,eAqBK,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBL,CADF;AAyBD;;AAED,SAAUa,QAAV,GAAqB;AACnBC,EAAAA,UAAU,CAAC,MAAM,IAAIxB,IAAJ,GAAWyB,KAAX,EAAP,EAA2B,IAA3B,CAAV;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAS,IAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAQD;;AAED,SAASC,MAAT,GAAkB;AAChB,MAAIjB,MAAJ,EAAW;AACT,WACEc,QAAQ,EADV;AAGD,GAJD,MAIK;AACH,WACEZ,KAAK,EADP;AAGD;AACF;;AACD,eAAee,MAAf;AAEA,MAAMC,IAAI,GAAG5B,MAAM,CAAC6B,GAAI;;;;;CAAxB;AAMA,MAAMC,KAAK,GAAG9B,MAAM,CAAC+B,EAAG;;CAAxB;AAGA,MAAMC,IAAI,GAAGhC,MAAM,CAACiC,IAAK;;;;;;;;;;CAAzB;AAWA,MAAMC,UAAU,GAAGlC,MAAM,CAACD,IAAD,CAAO;;;CAAhC;AAKA,MAAMoC,KAAK,GAAEnC,MAAM,CAACoC,KAAM;;CAA1B;AAGA,MAAMC,aAAa,GAAGrC,MAAM,CAACsC,KAAM;;;;;;;;CAAnC;AAUA,MAAMC,SAAS,GAAGvC,MAAM,CAACwC,MAAO;;;;;;;;;;;;;CAAhC;AAcA,MAAMC,MAAM,GAAGzC,MAAM,CAAC0C,MAAO;;;;;CAA7B;AAMA,MAAMC,QAAQ,GAAG3C,MAAM,CAACmC,KAAD,CAAQ;;CAA/B","sourcesContent":["import React, { createElement } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Game from '../src/game/Game';\r\nimport { useForm } from \"react-hook-form\";\r\n// import Counter from './game/Counter';\r\n\r\nconst error_messages = {\r\n  first_name: {\r\n    required: \"First name is required\",\r\n    minLength: \"First name is too short\"\r\n  },\r\n  last_name: {\r\n    required: \"Last name is required\",\r\n    minLength: \"Last name is too short\"\r\n  },\r\n  speed: {\r\n    required: \"speed address is required\",\r\n    minSpeed: \"Please insert positive numbers only\"\r\n  },\r\n};\r\n\r\nvar gameOn = false;\r\n\r\nfunction startGame(){\r\n gameOn = true;\r\n}\r\n\r\nfunction Pager() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const get_error_msg = (errors, error_messages, field_name) => {\r\n    const generate = name => {\r\n      if (errors[name]) {\r\n        switch (errors[name].type) {\r\n          case \"required\":\r\n            return error_messages[name].required;\r\n          case \"minLength\":\r\n            return error_messages[name].minLength;\r\n          case \"pattern\":\r\n            return error_messages[name].pattern;\r\n          default:\r\n            return \"\";\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    // // console.log(data);\r\n    // data.id = all_robots.length + 1;\r\n    // data.avatar = `https://robohash.org/${shortid.generate()}`;\r\n    // dispatch(create_bot(data));\r\n    // history.push(\"/browse\");\r\n    startGame();\r\n  };\r\n  \r\n  return (\r\n    <Page>\r\n        <Title>Single Player</Title>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Label>First Name:<FormItemInput \r\n                                placeholder=\"First Name\"\r\n                                ref={register({ required: true, minLength: 2 })}\r\n                                error_styled={errors.first_name}/>\r\n            </Label>\r\n            <ErrorMsg show={errors.first_name}></ErrorMsg>\r\n            <Label>Last Name:<FormItemInput \r\n                                placeholder=\"Last Name:\"\r\n                                ref={register({ required: true, minLength: 2 })}\r\n                                error_styled={errors.first_name}/>\r\n            </Label>\r\n            <ErrorMsg show={errors.last_name}></ErrorMsg>\r\n            <Label>User speed:<FormItemInput type='number' min=\"1\" max=\"10\" name='minSpeed'/></Label>\r\n            <ErrorMsg show={errors.minSpeed}></ErrorMsg>\r\n            <Label>PC speed:<FormItemInput type='number' min=\"1\" max=\"10\" name='minSpeed'/></Label>\r\n            <ErrorMsg show={errors.minSpeed}></ErrorMsg>\r\n        </Form>\r\n        <PlyButton onClick={() => startGame()}>Play!</PlyButton>\r\n         <StyledLink to=\"/play\">Back</StyledLink>\r\n    </Page>\r\n);\r\n}\r\n\r\nfunction  GameArea() {\r\n  setTimeout(() => new Game().start(), 1500);\r\n  return(\r\n    <div>\r\n    <Canvas  id=\"canvas\"/>\r\n    {/* <Counter/>\r\n    <Counter/> */}\r\n    </div>\r\n    );\r\n  \r\n}\r\n  \r\nfunction Single() {\r\n  if (gameOn){\r\n    return(\r\n      GameArea()\r\n    );\r\n  }else{\r\n    return(\r\n      Pager()\r\n    );\r\n  }\r\n}\r\nexport default Single;\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: calc(5px + 2vmin);\r\n`\r\nconst Form = styled.form`\r\n  display: flex;\r\n  // border: 2px solid pink;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  // text-align: center;\r\n  align-items: stretch;\r\n  padding:50px;\r\n  font-size: calc(5px + 2vmin);\r\n  direction: ltr;\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  color: mintcream;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Label =styled.label`\r\npadding: 20px;\r\n`\r\nconst FormItemInput = styled.input`\r\n  border: none;\r\n  padding: 3px;\r\n  color: mintcream;\r\n  background-color: #282c34;\r\n  font-size: calc(5px + 2vmin);\r\n  font-family: 'Press Start 2P', cursive;\r\n  border-bottom: solid 3px mintcream;\r\n`;\r\n\r\nconst PlyButton = styled.button`\r\n  color: mintcream;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  padding:50px;\r\n  font-size: calc(10px + 2vmin);\r\n  background-color: #282c34;\r\n  font-family: 'Press Start 2P', cursive;\r\n  border: none;\r\n  &:hover {\r\n    font-size: calc(20px + 2vmin);;\r\n  }\r\n`;\r\nconst Canvas = styled.canvas`\r\n    position: absolute;\r\n    border:solid deepPink 3px;\r\n    top: 20%;\r\n    left: 15%;\r\n`;\r\nconst ErrorMsg  =styled(Label)`\r\n  color: red;\r\n`"]},"metadata":{},"sourceType":"module"}