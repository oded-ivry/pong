{"ast":null,"code":"import Player from './Player';\n\nclass Ball {\n  constructor() {\n    this.raduis = 35;\n\n    //singleton\n    if (Ball.instance) {\n      return Ball.instance;\n    }\n\n    Ball.instance = this;\n    this.canvas = document.getElementById(\"canvas\");\n    this.ctxt = this.canvas.getContext('2d');\n    this.x = this.canvas.width / 2;\n    this.y = this.canvas.height / 2;\n    this.xDirection = -1;\n    this.yDirection = 1;\n    this.color = 'red';\n    this.speed = 4;\n    window.addEventListener('resize', () => {\n      this.canvas.width = document.body.clientWidth;\n      this.canvas.height = window.innerHeight - 20;\n    });\n  }\n\n  drawCircle() {\n    this.ctxt.beginPath();\n    this.ctxt.arc(this.x, this.y, this.raduis, 0, 2 * Math.PI);\n    this.ctxt.fillStyle = this.color;\n    this.ctxt.stroke();\n    this.ctxt.fill();\n    this.ctxt.closePath();\n  }\n\n  drawBall() {\n    //updating ball's coordinates\n    this.x += this.speed * this.xDirection;\n    this.y += this.speed * this.yDirection;\n    this.drawCircle(); // check upper & lower field boundries\n\n    let topBorder = 0;\n    let bottomBorder = this.canvas.height - this.raduis;\n\n    if (this.y < topBorder || this.y > bottomBorder) {\n      this.yDirection = -this.yDirection;\n    }\n  }\n\n}\n\nexport default Ball;","map":{"version":3,"sources":["C:/Users/Oded/Desktop/Game/pong/src/game/Ball.js"],"names":["Player","Ball","constructor","raduis","instance","canvas","document","getElementById","ctxt","getContext","x","width","y","height","xDirection","yDirection","color","speed","window","addEventListener","body","clientWidth","innerHeight","drawCircle","beginPath","arc","Math","PI","fillStyle","stroke","fill","closePath","drawBall","topBorder","bottomBorder"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAN,CAAW;AAGPC,EAAAA,WAAW,GAAG;AAAA,SAFdC,MAEc,GAFL,EAEK;;AACV;AACA,QAAGF,IAAI,CAACG,QAAR,EAAkB;AACd,aAAOH,IAAI,CAACG,QAAZ;AACH;;AACDH,IAAAA,IAAI,CAACG,QAAL,GAAgB,IAAhB;AAEA,SAAKC,MAAL,GAAcC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd;AACA,SAAKC,IAAL,GAAY,KAAKH,MAAL,CAAYI,UAAZ,CAAuB,IAAvB,CAAZ;AACA,SAAKC,CAAL,GAAS,KAAKL,MAAL,CAAYM,KAAZ,GAAoB,CAA7B;AACA,SAAKC,CAAL,GAAS,KAAKP,MAAL,CAAYQ,MAAZ,GAAqB,CAA9B;AACA,SAAKC,UAAL,GAAkB,CAAC,CAAnB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,KAAL,GAAa,KAAb;AACA,SAAKC,KAAL,GAAa,CAAb;AAEAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,WAAKd,MAAL,CAAYM,KAAZ,GAAoBL,QAAQ,CAACc,IAAT,CAAcC,WAAlC;AACA,WAAKhB,MAAL,CAAYQ,MAAZ,GAAqBK,MAAM,CAACI,WAAP,GAAqB,EAA1C;AACC,KAHL;AAKH;;AAEDC,EAAAA,UAAU,GAAE;AACR,SAAKf,IAAL,CAAUgB,SAAV;AACA,SAAKhB,IAAL,CAAUiB,GAAV,CAAc,KAAKf,CAAnB,EAAsB,KAAKE,CAA3B,EAA8B,KAAKT,MAAnC,EAA2C,CAA3C,EAA8C,IAAIuB,IAAI,CAACC,EAAvD;AACA,SAAKnB,IAAL,CAAUoB,SAAV,GAAsB,KAAKZ,KAA3B;AACA,SAAKR,IAAL,CAAUqB,MAAV;AACA,SAAKrB,IAAL,CAAUsB,IAAV;AACA,SAAKtB,IAAL,CAAUuB,SAAV;AACH;;AAEDC,EAAAA,QAAQ,GAAG;AACP;AACA,SAAKtB,CAAL,IAAU,KAAKO,KAAL,GAAa,KAAKH,UAA5B;AACA,SAAKF,CAAL,IAAU,KAAKK,KAAL,GAAa,KAAKF,UAA5B;AACA,SAAKQ,UAAL,GAJO,CAMP;;AACA,QAAIU,SAAS,GAAG,CAAhB;AACA,QAAIC,YAAY,GAAG,KAAK7B,MAAL,CAAYQ,MAAZ,GAAqB,KAAKV,MAA7C;;AACA,QAAI,KAAKS,CAAL,GAASqB,SAAT,IAAsB,KAAKrB,CAAL,GAASsB,YAAnC,EAAiD;AAC7C,WAAKnB,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACH;AACJ;;AA/CM;;AAkDX,eAAed,IAAf","sourcesContent":["import Player from './Player';\r\n\r\nclass Ball {\r\n    raduis = 35;\r\n\r\n    constructor() {\r\n        //singleton\r\n        if(Ball.instance) {\r\n            return Ball.instance;\r\n        }\r\n        Ball.instance = this;\r\n\r\n        this.canvas = document.getElementById(\"canvas\");\r\n        this.ctxt = this.canvas.getContext('2d');\r\n        this.x = this.canvas.width / 2;\r\n        this.y = this.canvas.height / 2;\r\n        this.xDirection = -1;\r\n        this.yDirection = 1;\r\n        this.color = 'red';\r\n        this.speed = 4;\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.canvas.width = document.body.clientWidth;\r\n            this.canvas.height = window.innerHeight - 20;\r\n            }\r\n        );\r\n    }\r\n\r\n    drawCircle(){\r\n        this.ctxt.beginPath();\r\n        this.ctxt.arc(this.x, this.y, this.raduis, 0, 2 * Math.PI);\r\n        this.ctxt.fillStyle = this.color;\r\n        this.ctxt.stroke();\r\n        this.ctxt.fill();\r\n        this.ctxt.closePath();\r\n    }\r\n    \r\n    drawBall() {\r\n        //updating ball's coordinates\r\n        this.x += this.speed * this.xDirection;\r\n        this.y += this.speed * this.yDirection;\r\n        this.drawCircle();\r\n\r\n        // check upper & lower field boundries\r\n        let topBorder = 0;\r\n        let bottomBorder = this.canvas.height - this.raduis;\r\n        if (this.y < topBorder || this.y > bottomBorder) {\r\n            this.yDirection = -this.yDirection;\r\n        }\r\n    } \r\n}\r\n\r\nexport default Ball;"]},"metadata":{},"sourceType":"module"}