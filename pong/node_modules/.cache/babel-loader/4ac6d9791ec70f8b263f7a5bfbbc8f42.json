{"ast":null,"code":"// import Player from './Player';\nclass Ball {\n  constructor(canvas) {\n    this.raduis = 25;\n\n    //singleton\n    if (Ball.instance) {\n      return Ball.instance;\n    }\n\n    Ball.instance = this;\n    this.canvas = canvas;\n    this.ctxt = this.canvas.getContext('2d');\n    this.x = this.canvas.width / 2;\n    this.y = this.canvas.height / 2;\n    this.xDirection = -1;\n    this.yDirection = 1;\n    this.color = 'red';\n    this.speed = 2;\n    window.addEventListener('resize', () => {\n      this.canvas.width = document.body.clientWidth;\n      this.canvas.height = window.innerHeight - 20;\n    });\n  }\n\n  drawCircle() {\n    this.ctxt.beginPath();\n    this.ctxt.arc(this.x, this.y, this.raduis, 0, 2 * Math.PI);\n    this.ctxt.fillStyle = this.color;\n    this.ctxt.stroke();\n    this.ctxt.fill();\n    this.ctxt.closePath();\n  }\n\n  drawBall() {\n    //updating ball's coordinates\n    this.x += this.speed * this.xDirection;\n    this.y += this.speed * this.yDirection;\n    this.drawCircle(); // check upper & lower field boundries\n\n    let topBorder = 0;\n    let bottomBorder = this.canvas.height - this.raduis;\n\n    if (this.y < topBorder || this.y > bottomBorder) {\n      this.yDirection = -this.yDirection;\n    }\n  }\n\n}\n\nexport default Ball;","map":{"version":3,"sources":["C:/Users/Oded/Desktop/Game/pong/src/game/Ball.js"],"names":["Ball","constructor","canvas","raduis","instance","ctxt","getContext","x","width","y","height","xDirection","yDirection","color","speed","window","addEventListener","document","body","clientWidth","innerHeight","drawCircle","beginPath","arc","Math","PI","fillStyle","stroke","fill","closePath","drawBall","topBorder","bottomBorder"],"mappings":"AAAA;AAEA,MAAMA,IAAN,CAAW;AAGPC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA,SAFpBC,MAEoB,GAFX,EAEW;;AAChB;AACA,QAAGH,IAAI,CAACI,QAAR,EAAkB;AACd,aAAOJ,IAAI,CAACI,QAAZ;AACH;;AACDJ,IAAAA,IAAI,CAACI,QAAL,GAAgB,IAAhB;AAEA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKG,IAAL,GAAY,KAAKH,MAAL,CAAYI,UAAZ,CAAuB,IAAvB,CAAZ;AACA,SAAKC,CAAL,GAAS,KAAKL,MAAL,CAAYM,KAAZ,GAAoB,CAA7B;AACA,SAAKC,CAAL,GAAS,KAAKP,MAAL,CAAYQ,MAAZ,GAAqB,CAA9B;AACA,SAAKC,UAAL,GAAkB,CAAC,CAAnB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,KAAL,GAAa,KAAb;AACA,SAAKC,KAAL,GAAa,CAAb;AAEAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,WAAKd,MAAL,CAAYM,KAAZ,GAAoBS,QAAQ,CAACC,IAAT,CAAcC,WAAlC;AACA,WAAKjB,MAAL,CAAYQ,MAAZ,GAAqBK,MAAM,CAACK,WAAP,GAAqB,EAA1C;AACC,KAHL;AAKH;;AAEDC,EAAAA,UAAU,GAAE;AACR,SAAKhB,IAAL,CAAUiB,SAAV;AACA,SAAKjB,IAAL,CAAUkB,GAAV,CAAc,KAAKhB,CAAnB,EAAsB,KAAKE,CAA3B,EAA8B,KAAKN,MAAnC,EAA2C,CAA3C,EAA8C,IAAIqB,IAAI,CAACC,EAAvD;AACA,SAAKpB,IAAL,CAAUqB,SAAV,GAAsB,KAAKb,KAA3B;AACA,SAAKR,IAAL,CAAUsB,MAAV;AACA,SAAKtB,IAAL,CAAUuB,IAAV;AACA,SAAKvB,IAAL,CAAUwB,SAAV;AACH;;AAEDC,EAAAA,QAAQ,GAAG;AACP;AACA,SAAKvB,CAAL,IAAU,KAAKO,KAAL,GAAa,KAAKH,UAA5B;AACA,SAAKF,CAAL,IAAU,KAAKK,KAAL,GAAa,KAAKF,UAA5B;AACA,SAAKS,UAAL,GAJO,CAMP;;AACA,QAAIU,SAAS,GAAG,CAAhB;AACA,QAAIC,YAAY,GAAG,KAAK9B,MAAL,CAAYQ,MAAZ,GAAqB,KAAKP,MAA7C;;AACA,QAAI,KAAKM,CAAL,GAASsB,SAAT,IAAsB,KAAKtB,CAAL,GAASuB,YAAnC,EAAiD;AAC7C,WAAKpB,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACH;AACJ;;AA/CM;;AAkDX,eAAeZ,IAAf","sourcesContent":["// import Player from './Player';\r\n\r\nclass Ball {\r\n    raduis = 25;\r\n\r\n    constructor(canvas) {\r\n        //singleton\r\n        if(Ball.instance) {\r\n            return Ball.instance;\r\n        }\r\n        Ball.instance = this;\r\n\r\n        this.canvas = canvas;\r\n        this.ctxt = this.canvas.getContext('2d');\r\n        this.x = this.canvas.width / 2;\r\n        this.y = this.canvas.height / 2;\r\n        this.xDirection = -1;\r\n        this.yDirection = 1;\r\n        this.color = 'red';\r\n        this.speed = 2;\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.canvas.width = document.body.clientWidth;\r\n            this.canvas.height = window.innerHeight - 20;\r\n            }\r\n        );\r\n    }\r\n\r\n    drawCircle(){\r\n        this.ctxt.beginPath();\r\n        this.ctxt.arc(this.x, this.y, this.raduis, 0, 2 * Math.PI);\r\n        this.ctxt.fillStyle = this.color;\r\n        this.ctxt.stroke();\r\n        this.ctxt.fill();\r\n        this.ctxt.closePath();\r\n    }\r\n    \r\n    drawBall() {\r\n        //updating ball's coordinates\r\n        this.x += this.speed * this.xDirection;\r\n        this.y += this.speed * this.yDirection;\r\n        this.drawCircle();\r\n\r\n        // check upper & lower field boundries\r\n        let topBorder = 0;\r\n        let bottomBorder = this.canvas.height - this.raduis;\r\n        if (this.y < topBorder || this.y > bottomBorder) {\r\n            this.yDirection = -this.yDirection;\r\n        }\r\n    } \r\n}\r\n\r\nexport default Ball;"]},"metadata":{},"sourceType":"module"}