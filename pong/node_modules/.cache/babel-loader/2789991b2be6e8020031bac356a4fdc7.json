{"ast":null,"code":"// import Ball from './Ball';\nclass Player\n/*  extends PC  */\n{\n  constructor(userType, canvas) {\n    Player.instance = this;\n    this.userType = userType;\n    this.keysDown = {};\n    this.pcSpeed = 20;\n    this.userSpeed = 10;\n    this.canvas = canvas;\n    this.ctxt = this.canvas.getContext('2d');\n    this.speed = this.userType === 'P1' || this.userType === 'P2' ? this.userSpeed : this.pcSpeed;\n    this.playerSize = 120;\n    this.playerWidth = 20;\n    this.y = this.canvas.height / 2 - this.playerSize / 2;\n    this.setEventListeners();\n  }\n\n  setEventListeners() {\n    if (this.userType === 'P1') {\n      window.addEventListener(\"keydown\", event => {\n        if (event.code === \"ArrowRight\") {\n          this.keysDown[\"Right\"] = true;\n        }\n\n        if (event.code === \"ArrowLeft\") {\n          this.keysDown[\"Left\"] = true;\n        }\n      });\n      window.addEventListener(\"keyup\", event => {\n        if (event.code === \"ArrowRight\") {\n          delete this.keysDown[\"Right\"];\n        }\n\n        if (event.code === \"ArrowLeft\") {\n          delete this.keysDown[\"Left\"];\n        }\n      });\n      window.addEventListener('resize', () => {\n        this.canvas.width = document.body.clientWidth;\n        this.canvas.height = window.innerHeight - 20;\n        this.y = this.canvas.height / 2;\n      });\n    } else if (this.userType === 'P2') {\n      window.addEventListener(\"keydown\", event => {\n        if (event.code === 'KeyQ') {\n          this.keysDown[\"KeyQ\"] = true;\n        }\n\n        if (event.code === 'KeyA') {\n          this.keysDown[\"KeyA\"] = true;\n        }\n      });\n      window.addEventListener(\"keyup\", event => {\n        if (event.code === \"KeyQ\") {\n          delete this.keysDown[\"KeyQ\"];\n        }\n\n        if (event.code === \"KeyA\") {\n          delete this.keysDown[\"KeyA\"];\n        }\n      }); // window.addEventListener('resize', () =>{\n      //     this.canvas.width = document.body.clientWidth;\n      //     this.canvas.height = window.innerHeight - 20;\n      //     this.y = this.canvas.height / 2;\n      //     }\n      // );\n    }\n  }\n\n  drawPlayer() {\n    //set white color and draw player on correct side of the screen\n    this.ctxt.fillStyle = 'white';\n\n    if (this.userType === 'P1') {\n      this.ctxt.fillRect(this.canvas.width - this.playerWidth, this.y, this.playerWidth, this.playerSize);\n    } else if (this.userType === 'P2' || this.userType === 'PC') {\n      this.ctxt.fillRect(0, this.y, this.playerWidth, this.playerSize);\n    } //check field limits and block player from leaving the field + smoother key changes\n\n\n    let topBorder = 0;\n    let bottomBorder = this.canvas.height - this.playerSize;\n\n    if (this.userType === 'P1') {\n      if ('Right' in this.keysDown && this.y > topBorder) {\n        this.y -= this.speed;\n      }\n\n      if ('Left' in this.keysDown && this.y < bottomBorder) {\n        this.y += this.speed;\n      }\n    } else if (this.userType === 'P2') {\n      if ('KeyQ' in this.keysDown && this.y > topBorder) {\n        this.y -= this.speed;\n      }\n\n      if ('KeyA' in this.keysDown && this.y < bottomBorder) {\n        this.y += this.speed;\n      }\n    }\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["C:/Users/Oded/Desktop/Game/pong/src/game/Player.js"],"names":["Player","constructor","userType","canvas","instance","keysDown","pcSpeed","userSpeed","ctxt","getContext","speed","playerSize","playerWidth","y","height","setEventListeners","window","addEventListener","event","code","width","document","body","clientWidth","innerHeight","drawPlayer","fillStyle","fillRect","topBorder","bottomBorder"],"mappings":"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","sourcesContent":["// import Ball from './Ball';\r\n\r\nclass Player/*  extends PC  */{\r\n    constructor(userType, canvas) {\r\n\r\n        Player.instance = this;\r\n        this.userType = userType;\r\n        this.keysDown = {};\r\n        this.pcSpeed = 20;\r\n        this.userSpeed = 10;\r\n\r\n        this.canvas = canvas;\r\n        this.ctxt = this.canvas.getContext('2d');\r\n        this.speed = this.userType === 'P1' ||\r\n        this.userType === 'P2' ?\r\n        this.userSpeed : this.pcSpeed;\r\n        this.playerSize = 120;\r\n        this.playerWidth = 20;\r\n        this.y = this.canvas.height / 2 - this.playerSize / 2;\r\n\r\n        this.setEventListeners();\r\n    }\r\n\r\n    setEventListeners(){\r\n        if (this.userType === 'P1'){\r\n            window.addEventListener(\"keydown\", event => {\r\n                if(event.code === \"ArrowRight\"){\r\n                    this.keysDown[\"Right\"] = true; \r\n                }\r\n                if(event.code === \"ArrowLeft\"){\r\n                    this.keysDown[\"Left\"] = true;\r\n                }\r\n            });\r\n            \r\n            window.addEventListener(\"keyup\", event => {\r\n                if(event.code === \"ArrowRight\"){\r\n                    delete this.keysDown[\"Right\"];\r\n                }\r\n                if(event.code === \"ArrowLeft\"){\r\n                    delete this.keysDown[\"Left\"];\r\n                }\r\n            });\r\n\r\n            window.addEventListener('resize', () =>{\r\n                this.canvas.width = document.body.clientWidth;\r\n                this.canvas.height = window.innerHeight - 20;\r\n                this.y = this.canvas.height / 2;\r\n                }\r\n            );\r\n        }else if (this.userType === 'P2') {\r\n            window.addEventListener(\"keydown\", event => {\r\n                if(event.code === 'KeyQ'){\r\n                    this.keysDown[\"KeyQ\"] = true; \r\n                }\r\n                if(event.code === 'KeyA'){\r\n                    this.keysDown[\"KeyA\"] = true;\r\n                }\r\n            });\r\n            \r\n            window.addEventListener(\"keyup\", event => {\r\n                if(event.code === \"KeyQ\"){\r\n                    delete this.keysDown[\"KeyQ\"];\r\n                }\r\n                if(event.code === \"KeyA\"){\r\n                    delete this.keysDown[\"KeyA\"];\r\n                }\r\n            });\r\n\r\n            // window.addEventListener('resize', () =>{\r\n            //     this.canvas.width = document.body.clientWidth;\r\n            //     this.canvas.height = window.innerHeight - 20;\r\n            //     this.y = this.canvas.height / 2;\r\n            //     }\r\n            // );\r\n        }\r\n    }\r\n\r\n    drawPlayer(){\r\n        //set white color and draw player on correct side of the screen\r\n        this.ctxt.fillStyle = 'white';\r\n        if (this.userType === 'P1'){\r\n            this.ctxt.fillRect(this.canvas.width - this.playerWidth, this.y, this.playerWidth , this.playerSize);\r\n        }else if (this.userType === 'P2' || this.userType === 'PC') {\r\n            this.ctxt.fillRect(0, this.y, this.playerWidth , this.playerSize);\r\n        }\r\n\r\n        //check field limits and block player from leaving the field + smoother key changes\r\n        let topBorder = 0;\r\n        let bottomBorder = this.canvas.height - this.playerSize;\r\n        \r\n        if (this.userType === 'P1') {\r\n            if ('Right' in this.keysDown && this.y > topBorder){\r\n            this.y -= this.speed;\r\n            }\r\n            if('Left' in this.keysDown && this.y < bottomBorder){ \r\n            this.y += this.speed;\r\n            }\r\n        }else if (this.userType === 'P2'){\r\n            if ('KeyQ' in this.keysDown && this.y > topBorder){\r\n                this.y -= this.speed;\r\n            }\r\n            if('KeyA' in this.keysDown && this.y < bottomBorder){ \r\n                this.y += this.speed;\r\n            }\r\n        }        \r\n    }\r\n}\r\nexport default Player;"]},"metadata":{},"sourceType":"module"}